static：
	1.静态变量
		由static修饰，并且存储在方法区中，只有一份；
	   	通过类名.来进行调用;
		当所有的对象所共享的资源的时候使用
	2.静态方法
		由static修饰，并且存储在方法区中，只有一份；
		通过类名.来进行调用;
		何时用？方法的操作只与参数相关，但是与对象无关；
		静态方法中不能调用非静态成员方法和非静态成员变量，
		但是在非静态成员方法中是可以调用静态成员方法/变量的
	3.静态代码快
		属于类中，在类被加载的期间进行自动调用，
		类只能被加载一次所以静态代码快也只能执行一次，
		初始化，加载静态资源的时候使用；
abstract
	1.抽象方法，abstract修饰，只有方法的定义，没有方法的实现。
	2.抽象类， 包含抽象方法的类，必须是抽象类，抽象类不能被实例化
		抽象类是需要被继承的，继承了抽象类的子类，要重写所有的抽象方法，
	3.抽象类的意义：
			封装了子类当中所共有的属性和行为；-------代码重用
			为所有的子类提供一种统一的类型；---------向上造型
			可以包含抽象方法，为所有子类提供了统一的入口；	
	4.扩展
		所有的子类行为都一样，设计为普通方法；
		所有的子类行为都不一样，设计为抽象方法；
接口的特点：
1.接口不能被实例化；
2.接口可以多实现，但是继承是单继承
3.接口中可以定义方法，方法有固定的修饰词：public
4.子类必须覆盖接口中所有抽象方法，子类才可以实例化，否则子类是一个抽象类
5.接口中可以定义变量，但是变量必须有固定的修饰符，也称为常量，值不发送改变；
final:修饰符
1.修饰符，可以用于修饰类，成员变量，成员方法
2.只要被final修饰的类，不能被继承，不能有子类
3.final修饰的类，不能被重写；
4.final修饰的常量，不可以被修改的，是常量；
